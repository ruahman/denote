#+title:      finite fields
#+date:       [2023-01-10 Tue 07:24]
#+filetags:   :math:
#+identifier: 20230110T072424

* finite field definition

a finite field is a finite set of number and two operations,(+,-) that satisfy the following

1. if a and b are in the set then, a + b and a * b are also in the set.
   - this is called the _closed_ property
   - the results always stay inside the set

2. zero exists and has the propert a + 0 = a
   - this is called the _additive identity_ property

3. 1 exitst and a * 1 = a
   - this is called the _multiplicative identity_ property

4. if a is in the set and -a is in the set, then a - a = 0
   - this is called the _additive inverse_ property

5. if a is in the set and is not 0, then $a^{-1}$ is in the set that make $a \cdot a^{-1} = 1$
   - this is called the _multiplication inverse_ property

6. the _order_ of the set size of numbers
   
- in order to acceive the following properties we need to redefine additon and multiplication for the set.

* defining finite sets

if the order of the set is defined as p, then the elements of the set are $\{0,1,2,\dots,p-1\}$

- these are called elements of the set
- notice that p is alway one more than its largist element
- p is alway prime
  
\begin{align*}
F_p  &= \{0,1,2,\dots,p-1\}\\
F_{11} &= \{0,1,2,3,4,5,6,7,8,9,10\}
\end{align*}

* finite field in python

#+begin_src python :results output
  class FieldElement:

      def __init__(self, num, prime):
          if num >= prime or num < 0:
              raise ValueError(f"{num} is not in finite field {prime}")
          self.num = num
          self.prime = prime

      def __repr__(self):
          return f"FieldElement_{self.prime}({self.num})"

      def __eq__(self, other):
          if other is None:
              return False
          return self.num == other.num and self.prime == other.prime

      def __ne__(self, other):
          return not (self == other)

  a = FieldElement(7, 13)
  b = FieldElement(6, 13)
  print(a == b)
  print(a == a)
  print(a != b)
#+end_src

#+RESULTS:
: False
: True
: True

